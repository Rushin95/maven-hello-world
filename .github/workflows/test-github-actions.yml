name: Maven CI/CD

on:
  push:
    branches: [ test-github-actions ]
  pull_request:
    branches: [ test-github-actions ]


jobs:
  build_on_ubuntu:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Running mvn clean install 
      run: mvn --file my-app/pom.xml clean install
    - name: Running mvn test 
      run: mvn --file my-app/pom.xml test
    - name: Build Package
      run: mvn -B package --file my-app/pom.xml
    - name: Create Directory and copy JAR
      run: mkdir artifacts && cp my-app/target/*.jar artifacts
    - name: Upload JAR
      uses: actions/upload-artifact@v2
      with:
        name: Project Artifact ZIP
        path: artifacts
    - name: Tag/Release on Push Action
      uses: rymndhng/release-on-push-action@v0.15.0
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        bump_version_scheme: minor

# # TODO: Uncomment it later to verify new changes.
#   build_on_windows:
#     runs-on: windows-latest

#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up JDK 1.8
#       uses: actions/setup-java@v1
#       with:
#         java-version: 1.8

#     - name: Build project with Maven
#       run: mvn -B package --file my-app/pom.xml

#   build_on_macOS:
#     runs-on: macos-latest

#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up JDK 1.8
#       uses: actions/setup-java@v1
#       with:
#         java-version: 1.8

#     - name: Build project with Maven
#       run: mvn -B package --file my-app/pom.xml
